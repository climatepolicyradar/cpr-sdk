name: publish
on:
  release:
    types:
      - published

jobs:
  precommit-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v5

      - name: Run pre-commit checks
        uses: ./.github/actions/precommit-checks

  fixme-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v5

      - name: Run fixme checks
        uses: ./.github/actions/fixme-checks

  package-version-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v5

      - name: Run package version checks
        uses: ./.github/actions/check-version-release

  placeholder-version-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v5

      - name: Check the placeholder version
        uses: ./.github/actions/placeholder

  test:
    runs-on: ubuntu-latest
    needs:
      [
        precommit-checks,
        fixme-checks,
        package-version-checks,
        placeholder-version-checks,
      ]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v5

      - name: Run tests
        uses: ./.github/actions/test

  publish:
    runs-on: ubuntu-latest
    needs: [test]
    timeout-minutes: 10
    steps:
      - name: Check out repository code
        uses: actions/checkout@v5

      - name: Install poetry
        run: pipx install poetry

      - name: Install python or load from cache with dependencies
        uses: actions/setup-python@v5
        with:
          python-version-file: pyproject.toml
          cache: poetry

      - name: Install dependencies
        run: poetry install

      - name: Update version in pyproject.toml
        run: |
          PACKAGE_VERSION=$(python -c "from src import cpr_sdk; print(cpr_sdk.__version__)")
          poetry version $PACKAGE_VERSION

      - name: Build
        run: poetry build

      - name: Publish
        run: poetry publish --username __token__ --password ${{ secrets.PYPI_TOKEN }}
        # Allow for slow uploads [1]
        # [1] https://python-poetry.org/docs/faq#my-requests-are-timing-out
        env:
          POETRY_REQUESTS_TIMEOUT: 120 # Seconds
