name: main
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  precommit-checks:
    runs-on: ubuntu-latest
    steps: 
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Run pre-commit checks
      uses: ./.github/actions/precommit-checks

  fixme-checks:
    runs-on: ubuntu-latest
    steps: 
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Run fixme checks 
      uses: ./.github/actions/fixme-checks

  package-version-checks:
    runs-on: ubuntu-latest
    steps: 
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Check the package version
      uses: ./.github/actions/check-version

  placeholder-version-checks:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Check the placeholder version
      uses: ./.github/actions/placeholder

  test:
    runs-on: ubuntu-latest
    needs: [precommit-checks, fixme-checks, package-version-checks, placeholder-version-checks]
    steps: 
    - name: Check out repository code
      uses: actions/checkout@v4
    
    - name: Run tests
      uses: ./.github/actions/test

  test-publish:
    runs-on: ubuntu-latest
    needs: [test]
    timeout-minutes: 10
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry==1.7.1

      - name: Install python or load from cache with dependencies
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: poetry

      - name: Install dependencies
        run: |
          poetry install

      - name: Set Unique Package Version
        run: |
          export "CURRENT_DATETIME=$(date +%s)"
          poetry version "1.0.${CURRENT_DATETIME}"
          poetry version

      - name: Build 
        run: |
          poetry build 

      - name: Publish 
        run: |
          poetry config repositories.test-pypi https://test.pypi.org/legacy/
          poetry publish --username __token__ --password ${{ secrets.TEST_PYPI_TOKEN }} -r test-pypi